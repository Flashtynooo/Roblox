local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local decalID = 179693472 -- Décal pour la tête

-- Rendre invisible toutes les parties sauf HRP
local function rendreInvisible(char)
	for _, part in pairs(char:GetChildren()) do
		if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
			part.Transparency = 1
			part.Color = Color3.new(0, 0, 0)
			part.CanCollide = false
		elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
			part.Handle.Transparency = 1
			part.Handle.CanCollide = false
		elseif part:IsA("Decal") or part:IsA("Texture") then
			part.Transparency = 1
		end
	end
end

-- Créer une copie propre d'une part
local function creerPartCopie(partOriginal)
	local p = Instance.new("Part")
	p.Name = partOriginal.Name
	p.Size = partOriginal.Size
	p.CFrame = partOriginal.CFrame
	p.Anchored = true
	p.CanCollide = false
	p.Material = partOriginal.Material
	p.Color = Color3.fromRGB(0, 0, 0) -- couleur noire
	p.Transparency = 0
	p.CastShadow = false
	p.TopSurface = partOriginal.TopSurface
	p.BottomSurface = partOriginal.BottomSurface

	for _, child in pairs(partOriginal:GetChildren()) do
		if child:IsA("SpecialMesh") then
			child:Clone().Parent = p
		end
	end

	-- Ajouter decal à la tête
	if partOriginal.Name == "Head" then
		local decal = Instance.new("Decal")
		decal.Face = Enum.NormalId.Front
		decal.Texture = "rbxassetid://" .. decalID
		decal.Parent = p
	end

	return p
end

-- Créer modèle et table des parties copiées
local function creerCopieParts(char)
	local model = Instance.new("Model", workspace)
	model.Name = "Flshty_test_CopieParts"

	local partsTable = {}

	for _, part in pairs(char:GetChildren()) do
		if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
			local copie = creerPartCopie(part)
			copie.Parent = model
			partsTable[part.Name] = copie
		end
	end

	return model, partsTable
end

-- Variables globales
_G.HELLO = false
_G.head = false
_G.body = false
_G["left arm"] = false
_G["right arm"] = false
_G["left leg"] = false
_G["right leg"] = false

local copierLoop = true
local copieModel, copiePartsTable

-- Fonction principale de suivi
local function suivrePartsLoop(originalChar, copiePartsTable)
	local RunService = game:GetService("RunService")

	RunService.RenderStepped:Connect(function()
		if _G.HELLO then
			-- Désactive le suivi
			copierLoop = false
			humanoid.WalkSpeed = 0
			humanoid.JumpPower = 0

			for name, part in pairs(copiePartsTable) do
				part.Color = Color3.new(0, 0, 0)
			end

		else
			-- Réactive le suivi
			copierLoop = true
			humanoid.WalkSpeed = 16
			humanoid.JumpPower = 50
		end

		if copierLoop then
			for name, part in pairs(copiePartsTable) do
				if not _G[name:lower()] then
					local original = originalChar:FindFirstChild(name)
					if original and original:IsA("BasePart") then
						part.CFrame = original.CFrame
					end
				end
			end
		end
	end)
end

-- ⚡ Exécution
rendreInvisible(character)
copieModel, copiePartsTable = creerCopieParts(character)
suivrePartsLoop(character, copiePartsTable)
