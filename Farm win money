-- Anti-spam
if _G.RockInProgress then
	warn("‚õî Script d√©j√† en cours d'ex√©cution.")
	return
end
_G.RockInProgress = true

local player = game.Players.LocalPlayer
local scrollingFrame = player:WaitForChild("PlayerGui"):WaitForChild("Inventory"):WaitForChild("Base"):WaitForChild("ScrollingFrame")

-- Hi√©rarchie des noms (du plus haut au plus bas)
local hierarchy = {
	"BabyYoda","Dominus","Yippe","LetMeDoItForYou","WhatTheDogDoing","Caseoh","DespacitoSpider","NyanCat","Moai","AmongUs",
	"TheRock","Universal","Ton618","QuantumFlux","CelestialVortex","Quasar","Magnetar","NeutronStar","SuperNova","StarCluster",
	"Nebula","Galaxy","BlackHole","Time","TheSun","Jupiter","Earth","Mars","MoneyRock","Mercury","Pluto","ObsidianRock",
	"RainbowRock","Moon","NeonRock","JadeRock","Ceres","DiamondRock","AmethystRock","GhostRock","ElectricRock","SapphireRock",
	"GoldRock","Meteor","CrystalRock","Asteroid","QuartzRock","AgileRock","FireRock","IceRock","Magma","LightRock","Water",
	"HeavyRock","CheeseBall","MossRock","Basketball","Football","SpeedRock","TennisBall","SpongeBall","HoneycombRock",
	"WoodRock","SandRock","BasicRock"
}

-- Index de priorit√©
local priority = {}
for i, name in ipairs(hierarchy) do
	priority[name] = #hierarchy - i + 1
end

-- Trouver le meilleur rock dispo
local highestRank = -1
local bestButtonName = nil

for _, child in ipairs(scrollingFrame:GetDescendants()) do
	if child:IsA("TextButton") and priority[child.Name] then
		local rank = priority[child.Name]
		if rank > highestRank then
			highestRank = rank
			bestButtonName = child.Name
		end
	end
end

-- Si trouv√©, on commence la s√©quence
if bestButtonName then
	print("üß† Le meilleur Rock est : " .. bestButtonName)

	local rep = game:GetService("ReplicatedStorage")
	local events = rep:WaitForChild("Events")

	-- S√©lection du rock
	events:WaitForChild("InventoryEvent"):FireServer("SelectRock", bestButtonName)
	wait(2)

	-- D√©marrer le contr√¥le
	events:WaitForChild("RockControlEvent"):FireServer("StartControl")

	-- Optionnel : mettre √† jour les rocks
	events:WaitForChild("GetAvailableRocksEvent"):FireServer()
	wait(1)

	-- Relancer StartControl pour s'assurer
	events:WaitForChild("RockControlEvent"):FireServer("StartControl")
	wait(1)

	-- Charger les scripts externes
	local success1, err1 = pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Flashtynooo/Roblox/refs/heads/Roll-rock/Get%20point"))()
	end)
	wait(0.1)
	local success2, err2 = pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Flashtynooo/Roblox/refs/heads/Roll-rock/Get%20point"))()
	end)
	wait(2)

	-- Fin du parcours (3 appels espac√©s)
	events:WaitForChild("RockReachedFinishEvent"):FireServer()
	wait(2)
	events:WaitForChild("RockReachedFinishEvent"):FireServer()
	wait(6)
	events:WaitForChild("RockReachedFinishEvent"):FireServer()


else
	warn("‚ùå Aucun rock valide trouv√© dans le ScrollingFrame.")
end

-- Lib√©ration du verrou
_G.RockInProgress = false
