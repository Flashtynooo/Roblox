local plr = game:GetService("Players").LocalPlayer

local function setupTool()
	local char = plr.Character or plr.CharacterAdded:Wait()
	local hum = char:WaitForChild("Humanoid")
	local anim = hum:WaitForChild("Animator")
	local pack = plr:WaitForChild("Backpack")

	-- Nettoyer ancien Tool s’il existe
	for _, t in pairs(pack:GetChildren()) do
		if t:IsA("Tool") and t.Name == "Jerk off" then
			t:Destroy()
		end
	end

	-- Créer animation
	local function getmodel()
		return hum.RigType == Enum.HumanoidRigType.R15 and "R15" or "R6"
	end

	local animId = getmodel() == "R15" and "rbxassetid://698251653" or "rbxassetid://72042024"

	local animation = Instance.new("Animation")
	animation.Name = "aaa"
	animation.AnimationId = animId
	animation.Parent = workspace

	-- Créer Tool
	local tool = Instance.new("Tool")
	tool.Name = "Jerk off"
	tool.RequiresHandle = false
	tool.ToolTip = "made by flashtynooo (lol this tool dont exist on this game)"
	tool.Parent = pack

	local doing = false
	local animtrack = nil

	tool.Equipped:Connect(function()
		doing = true
		while doing do
			if not animtrack then
				animtrack = anim:LoadAnimation(animation)
			end
			animtrack:Play()
			animtrack:AdjustSpeed(0.7)
			animtrack.TimePosition = 0.6
			task.wait(0.1)
			while doing and animtrack and animtrack.TimePosition < 0.7 do
				task.wait(0.05)
			end
			if animtrack then
				animtrack:Stop()
				animtrack:Destroy()
				animtrack = nil
			end
		end
	end)

	tool.Unequipped:Connect(function()
		doing = false
		if animtrack then
			animtrack:Stop()
			animtrack:Destroy()
			animtrack = nil
		end
	end)

	hum.Died:Connect(function()
		doing = false
		if animtrack then
			animtrack:Stop()
			animtrack:Destroy()
			animtrack = nil
		end
	end)

	-- Equip puis déséquip automatiquement
	task.wait(0.1)
	hum:EquipTool(tool)
	task.wait(0.05)
	hum:UnequipTools()
end

-- Exécution initiale
setupTool()

-- Réexécuter après chaque mort
plr.CharacterAdded:Connect(function()
	task.wait(0.5) -- attendre chargement complet du perso
	setupTool()
end)
